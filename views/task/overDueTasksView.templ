package task

import (
    "minicore/models"
    "strconv"
)

templ OverDueTasksView(tasks []models.OverDue){
     <div class="px-4 sm:px-6 lg:px-8">
         <div class="sm:flex sm:items-center">
           <div class="sm:flex-auto">
             <h1 class="text-base font-semibold leading-6 text-gray-900">OverDue Tasks</h1>
             <p class="mt-2 text-sm text-gray-700">
                A list of all the overdue tasks in you account and much more...
             </p>
           </div>
            <form class="flex"
               hx-get="/overdue"
               hx-trigger="submit"
               hx-target="#overDueTable"
               hx-swap="outerHTML"
            >
               @DatePicker("startDate", "startDate")
               @DatePicker("endDate", "endDate")
               @SubmitButton()
            </form>
         </div>
         <div class="mt-8 flow-root">
           <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
             <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
               <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
                      @OverDueTable(tasks)
            </div>
          </div>
        </div>
      </div>
    </div>
}

templ DatePicker(name, id string){
<div class="mt-1 relative rounded-md shadow-sm mx-3" xmlns="http://www.w3.org/1999/html">
        <input type="date" name={name} id={id} value="01-01-2024" class="focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md" placeholder="Select a date"/>
        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
            <path fill-rule="evenodd" d="M10 0a10 10 0 100 20 10 10 0 000-20zm0 18a8 8 0 110-16 8 8 0 010 16z"/>
          </svg>
        </div>
      </div>
}

templ SubmitButton(){
    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Submit
      </button>

}


templ OverDueTable(tasks []models.OverDue){

      <table class="min-w-full divide-y divide-gray-300" id="overDueTable">
        <thead class="bg-gray-100">
          <tr>
            <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Task Description</th>
            <th scope="col" class="ppx-3 py-3.5 text-left text-sm font-semibold text-gray-900">Employee</th>
            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Project Name</th>
            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Start Date</th>
            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">End Date</th>
            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Due Days</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200 bg-gray-50">
        for _, task := range tasks {
              <tr>
                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">{task.TaskName}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{task.EmployeeName}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{task.ProjectName}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{task.StartDate}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{task.DueDate}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{strconv.FormatInt(int64(task.DueDays),10)}</td>
              </tr>
          }
        </tbody>
      </table>

}